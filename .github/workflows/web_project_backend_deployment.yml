# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: elastic.beanstalk.prod CD

on:
  push:
    branches: [ master ]

env:
  NODE_ENV: prod
    
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - run: echo $NODE_ENV

    - name: Installing NPM in the frontend
      working-directory: ./frontend
      run: npm install
      
    - working-directory: ./frontend
      run: npm ci

    - name: list available scripts for npm
      working-directory: ./frontend
      run: npm run

    - name: build a frontend react app
      working-directory: ./frontend
      run: npm run build

    - name: move the build to the backend
      working-directory: ./frontend
      run: mv dist ../backend/dist

    - name: Installing NPM in the backend
      working-directory: ./backend
      run: npm install
      
    - working-directory: ./backend
      run: npm ci

    - name: Generate deployment package
      working-directory: ./backend
      run: zip -r deploy.zip * -x "**node_modules**"
      
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'
  
    - name: Beanstalk Deploy my app
      uses: einaregilsson/beanstalk-deploy@v18
      with:
        aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws_secret_key: ${{secrets.AWS_ACCESS_KEY_SECRET}}
        application_name: tutorials
        environment_name: Tutorials-env
        region: ap-southeast-1
        version_label: "app-version-${{ steps.format-time.outputs.replaced }}" #Using timestamp for the versions
        deployment_package: ./backend/deploy.zip

    - name: Deployed successfully!
      run: echo App deployed to ELB
